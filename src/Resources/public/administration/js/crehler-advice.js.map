{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/page/crehler-advice-list/crehler-advice-list.html.twig","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/page/crehler-advice-list/index.js","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/page/crehler-advice-detail/crehler-advice-detail.html.twig","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/page/crehler-advice-detail/index.js","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/blocks/commerce/advice/component/index.js","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/blocks/commerce/advice/component/sw-cms-block-advice.html.twig","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/blocks/commerce/advice/preview/index.js","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/blocks/commerce/advice/preview/sw-cms-preview-advice.html.twig","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/blocks/commerce/advice/index.js","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/index.js","webpack:////var/www/html/NewStrefaTenisa/custom/static-plugins/CrehlerAdvice/src/Resources/app/administration/src/module/crehler-advice/page/crehler-advice-create/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_Shopware","Shopware","Component","Mixin","Criteria","Data","register","template","inject","mixins","getByName","data","repository","items","total","sortBy","sortDirection","naturalSorting","isLoading","showDeleteModal","metaInfo","title","this","$createTitle","computed","entityRepository","repositoryFactory","columns","getColumns","dateFilter","Filter","methods","getList","_this","criteria","page","limit","setTerm","term","addSorting","sort","search","Context","api","then","catch","onDelete","id","onCloseDeleteModal","routerLink","label","width","allowResize","primary","onChangeLanguage","languageId","State","commit","onColumnSort","column","onSortColumn","item","isSaveSuccessful","identifier","placeholder","productTypeCriteria","addAssociation","entityName","$tc","created","createdComponent","getEntity","$route","params","entity","saveFinish","onSave","_this2","titleSaveError","messageSaveError","titleSaveSuccess","messageSaveSuccess","save","createNotificationSuccess","message","exception","createNotificationError","saveOnLanguageChange","abortOnLanguageChange","hasChanges","Service","registerCmsBlock","category","component","previewComponent","defaultConfig","marginBottom","marginTop","marginLeft","marginRight","sizingMode","slots","left","type","default","config","content","source","trim","Module","description","version","targetVersion","color","icon","snippets","plPL","enGB","routes","index","path","meta","parentPath","detail","settingsItem","to","group","utils","Utils","extend","beforeRouteEnter","from","next","includes","createId","getters","$super","$router","push"],"mappings":"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","file":"static/js/crehler-advice.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/crehleradvice/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"BK2Y\");\n","export default \"{% block crehler_advice_list %}\\r\\n    <sw-page class=\\\"crehler-advice-list\\\">\\r\\n        {% block crehler_advice_list_language_switch %}\\r\\n            <template #language-switch>\\r\\n                <sw-language-switch @on-change=\\\"onChangeLanguage\\\" />\\r\\n            </template>>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block crehler_advice_list_search_bar %}\\r\\n            <template slot=\\\"search-bar\\\">\\r\\n                <sw-search-bar\\r\\n                        initialSearchType=\\\"Nazwa\\\"\\r\\n                        :placeholder=\\\"$tc('crehler-advice.general.placeholderSearchBar')\\\"\\r\\n                        :initialSearch=\\\"term\\\"\\r\\n                        @search=\\\"onSearch\\\">\\r\\n                </sw-search-bar>\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block crehler_advice_list_smart_bar_header %}\\r\\n            <template slot=\\\"smart-bar-header\\\">\\r\\n                {% block crehler_advice_list_smart_bar_header_title %}\\r\\n                    <h2>\\r\\n                        {% block crehler_advice_list_smart_bar_header_title_text %}\\r\\n                            {{ $tc('crehler-advice.list.textHeadline') }}\\r\\n                        {% endblock %}\\r\\n\\r\\n                        {% block crehler_advice_list_smart_bar_header_amount %}\\r\\n                            <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\r\\n                                ({{ total }})\\r\\n                            </span>\\r\\n                        {% endblock %}\\r\\n                    </h2>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block crehler_advice_list_smart_bar_actions %}\\r\\n            <template slot=\\\"smart-bar-actions\\\">\\r\\n                {% block crehler_advice_list_smart_bar_actions_add %}\\r\\n                    <sw-button :routerLink=\\\"{ name: 'crehler.advice.create' }\\\" variant=\\\"primary\\\">\\r\\n                        {{ $tc('crehler-advice.list.buttonAdd') }}\\r\\n                    </sw-button>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block crehler_advice_list_cardview %}\\r\\n            <template slot=\\\"content\\\">\\r\\n                <div class=\\\"crehler-advice-list__content\\\">\\r\\n                    {% block crehler_advice_list_content %}\\r\\n                        <sw-entity-listing\\r\\n                                class=\\\"crehler-advice-list-grid\\\"\\r\\n                                v-if=\\\"items && total > 0\\\"\\r\\n                                :items=\\\"items\\\"\\r\\n                                :repository=\\\"entityRepository\\\"\\r\\n                                detailRoute=\\\"crehler.advice.detail\\\"\\r\\n                                :showSeleciton=\\\"false\\\"\\r\\n                                :sort-by=\\\"sortBy\\\"\\r\\n                                :sort-direction=\\\"sortDirection\\\"\\r\\n                                :natural-sorting=\\\"naturalSorting\\\"\\r\\n                                @column-sort=\\\"onColumnSort\\\"\\r\\n                                :isLoading=\\\"isLoading\\\"\\r\\n                                :columns=\\\"columns\\\">\\r\\n\\r\\n                            {% block crehler_advice_list_grid_created_at %}\\r\\n                                <template #column-createdAt=\\\"{ item }\\\">\\r\\n                                    {{ dateFilter(item.createdAt) }}\\r\\n                                </template>\\r\\n                            {% endblock %}\\r\\n\\r\\n                            {% block crehler_advice_list_grid_updated_at %}\\r\\n                                <template #column-updatedAt=\\\"{ item }\\\">\\r\\n                                    {{ dateFilter(item.updatedAt) }}\\r\\n                                </template>\\r\\n                            {% endblock %}\\r\\n\\r\\n                            <template #pagination>\\r\\n                                {% block sw_order_list_grid_pagination %}\\r\\n                                    <sw-pagination\\r\\n                                            :page=\\\"page\\\"\\r\\n                                            :limit=\\\"limit\\\"\\r\\n                                            :total=\\\"total\\\"\\r\\n                                            :total-visible=\\\"7\\\"\\r\\n                                            @page-change=\\\"onPageChange\\\">\\r\\n                                    </sw-pagination>\\r\\n                                {% endblock %}\\r\\n                            </template>\\r\\n                        </sw-entity-listing>\\r\\n                    {% endblock %}\\r\\n\\r\\n                    {% block crehler_advice_list_empty_state %}\\r\\n                        <sw-empty-state\\r\\n                                v-if=\\\"!isLoading && total == 0\\\"\\r\\n                                :title=\\\"$tc('crehler-advice.list.contentEmpty')\\\"\\r\\n                                :subline=\\\"$tc('crehler-advice.general.descriptionTextModule')\\\">\\r\\n                        </sw-empty-state>\\r\\n                    {% endblock %}\\r\\n                </div>\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block crehler_advice_list_sidebar %}\\r\\n            <template #sidebar>\\r\\n                <sw-sidebar class=\\\"crehler-advice-list__sidebar\\\">\\r\\n                    {% block crehler_advice_list_sidebar_item %}\\r\\n                        <sw-sidebar-item\\r\\n                                icon=\\\"regular-undo\\\"\\r\\n                                :title=\\\"$tc('crehler-advice.list.titleSidebarItemRefresh')\\\"\\r\\n                                @click=\\\"onRefresh\\\">\\r\\n                        </sw-sidebar-item>\\r\\n                    {% endblock %}\\r\\n                </sw-sidebar>\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n    </sw-page>\\r\\n{% endblock %}\";","const { Component, Mixin } = Shopware;\r\nconst { Criteria } = Shopware.Data;\r\n\r\nimport template from './crehler-advice-list.html.twig';\r\n\r\nComponent.register('crehler-advice-list', {\r\n    template,\r\n\r\n    inject: ['repositoryFactory'],\r\n\r\n    mixins: [\r\n        Mixin.getByName('listing'),\r\n        Mixin.getByName('notification'),\r\n        Mixin.getByName('placeholder')\r\n    ],\r\n\r\n    data() {\r\n        return {\r\n            repository: null,\r\n            items: null,\r\n            total: 0,\r\n            sortBy: 'createdAt',\r\n            sortDirection: 'ASC',\r\n            naturalSorting: false,\r\n            isLoading: false,\r\n            showDeleteModal: false,\r\n        };\r\n    },\r\n\r\n    metaInfo() {\r\n        return {\r\n            title: this.$createTitle()\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        entityRepository() {\r\n            return this.repositoryFactory.create('crehler_advice');\r\n        },\r\n\r\n        columns() {\r\n            return this.getColumns();\r\n        },\r\n\r\n        dateFilter() {\r\n            return Shopware.Filter.getByName('date');\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        getList() {\r\n            this.isLoading = true;\r\n            const criteria = new Criteria(this.page, this.limit);\r\n            criteria.setTerm(this.term);\r\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\r\n\r\n            this.entityRepository.search(criteria, Shopware.Context.api).then((items) => {\r\n                this.total = items.total;\r\n                this.items = items;\r\n                this.isLoading = false;\r\n\r\n                return items;\r\n            }).catch(() => {\r\n                this.isLoading = false;\r\n            });\r\n        },\r\n\r\n        onDelete(id) {\r\n            this.showDeleteModal = id;\r\n        },\r\n\r\n        onCloseDeleteModal() {\r\n            this.showDeleteModal = false;\r\n        },\r\n\r\n        getColumns() {\r\n            return [{\r\n                property: 'name',\r\n                routerLink: 'crehler.advice.detail',\r\n                label: 'crehler-advice.list.columnName',\r\n                width: '400px',\r\n                allowResize: true,\r\n                primary: true\r\n            }, {\r\n                property: 'createdAt',\r\n                label: 'crehler-advice.list.columnCreatedAt',\r\n                allowResize: true\r\n            }, {\r\n                property: 'updatedAt',\r\n                label: 'crehler-advice.list.columnUpdatedAt',\r\n                allowResize: true\r\n            }]\r\n        },\r\n\r\n        onChangeLanguage(languageId) {\r\n            Shopware.State.commit('context/setApiLanguageId', languageId);\r\n            this.getList();\r\n        },\r\n\r\n        onColumnSort(column) {\r\n            this.onSortColumn(column);\r\n        },\r\n    }\r\n});","export default \"{% block crehler_advice_detail %}\\r\\n    <sw-page class=\\\"crehler-advice-detail\\\">\\r\\n        {% block crehler_advice_detail_smart_bar_header %}\\r\\n            <template slot=\\\"smart-bar-header\\\">\\r\\n                {% block crehler_advice_detail_smart_bar_header_title %}\\r\\n                    <h2>{{ $tc('crehler-advice.detail.textHeadline') }}</h2>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block crehler_advice_detail_smart_bar_actions %}\\r\\n            <template slot=\\\"smart-bar-actions\\\">\\r\\n                {% block crehler_advice_detail_smart_bar_actions_cancel %}\\r\\n                    <sw-button :disabled=\\\"item.isLoading\\\" :routerLink=\\\"{ name: 'crehler.advice.index' }\\\">\\r\\n                        {{ $tc('crehler-advice.detail.buttonCancel') }}\\r\\n                    </sw-button>\\r\\n                {% endblock %}\\r\\n\\r\\n                {% block crehler_advice_detail_smart_bar_actions_save %}\\r\\n                    <sw-button-process\\r\\n                            class=\\\"crehler-advice-detail__save-action\\\"\\r\\n                            :isLoading=\\\"isLoading\\\"\\r\\n                            :processSuccess=\\\"isSaveSuccessful\\\"\\r\\n                            :disabled=\\\"item.isLoading || !item.productStreamId || !item.name\\\"\\r\\n                            variant=\\\"primary\\\"\\r\\n                            {% if VUE3 %}\\r\\n                                @update:process-success=\\\"saveFinish\\\"\\r\\n                            {% else %}\\r\\n                                @process-finish=\\\"saveFinish\\\"\\r\\n                            {% endif %}\\r\\n                            @click.prevent=\\\"onSave\\\">\\r\\n                        {{ $tc('crehler-advice.detail.buttonSave') }}\\r\\n                    </sw-button-process>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block crehler_advice_detail_language_switch %}\\r\\n            <template #language-switch>\\r\\n                <sw-language-switch\\r\\n                        :disabled=\\\"item.isNew()\\\"\\r\\n                        :save-changes-function=\\\"saveOnLanguageChange\\\"\\r\\n                        :abort-change-function=\\\"abortOnLanguageChange\\\"\\r\\n                        @on-change=\\\"onChangeLanguage\\\"\\r\\n                />\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block crehler_advice_detail_content %}\\r\\n            <sw-card-view slot=\\\"content\\\">\\r\\n                {% block crehler_advice_detail_content_card %}\\r\\n                    {% block crehler_advice_detail_content_language_info %}\\r\\n                        <sw-language-info :entity-description=\\\"entityName\\\"/>\\r\\n                    {% endblock %}\\r\\n\\r\\n                    {% block crehler_advice_detail_content_card %}\\r\\n                        <sw-card :isLoading=\\\"isLoading\\\" :title=\\\"$tc('crehler-advice.detail.cardTitle')\\\">\\r\\n                            {% block crehler_advice_detail_content_card_product_stream_field %}\\r\\n                                <sw-entity-single-select\\r\\n                                        id=\\\"sw-field--crossSelling-product-group\\\"\\r\\n                                        {% if VUE3 %}\\r\\n                                            v-model:value=\\\"item.productStreamId\\\"\\r\\n                                        {% else %}\\r\\n                                            v-model=\\\"item.productStreamId\\\"\\r\\n                                        {% endif %}\\r\\n                                        entity=\\\"product_stream\\\"\\r\\n                                        class=\\\"sw-select-cross-selling__select-product-stream\\\"\\r\\n                                        :label=\\\"$tc('crehler-advice.detail.inputCrossSellingProductStream')\\\"\\r\\n                                        :placeholder=\\\"$tc('crehler-advice.detail.inputCrossSellingProductStreamPlaceholder')\\\"\\r\\n                                        show-clearable-button\\r\\n                                        required\\r\\n                                />\\r\\n                            {% endblock %}\\r\\n\\r\\n                            {% block crehler_advice_detail_content_card_name %}\\r\\n                                <sw-text-field\\r\\n                                        {% if VUE3 %}\\r\\n                                            v-model:value=\\\"item.name\\\"\\r\\n                                        {% else %}\\r\\n                                            v-model=\\\"item.name\\\"\\r\\n                                        {% endif %}\\r\\n                                        class=\\\"crehler-advice-detail__item_name\\\"\\r\\n                                        name=\\\"sw-field--advice-name\\\"\\r\\n                                        :label=\\\"$tc('crehler-advice.detail.fieldNameLabel')\\\"\\r\\n                                        :placeholder=\\\"placeholder(item, 'name', $tc('crehler-advice.detail.fieldNamePlaceholder'))\\\"\\r\\n                                        required\\r\\n                                />\\r\\n                            {% endblock %}\\r\\n\\r\\n                            {% block crehler_advice_detail_content_card_description %}\\r\\n                                <sw-text-editor\\r\\n                                        {% if VUE3 %}\\r\\n                                            v-model:value=\\\"item.description\\\"\\r\\n                                        {% else %}\\r\\n                                            v-model=\\\"item.description\\\"\\r\\n                                        {% endif %}\\r\\n                                        type=\\\"textarea\\\"\\r\\n                                        :label=\\\"$tc('crehler-advice.detail.descriptionLabel')\\\"\\r\\n                                        :placeholder=\\\"placeholder(item, 'description',$tc('crehler-advice.detail.descriptionPlaceholder'))\\\"\\r\\n                                />\\r\\n                            {% endblock %}\\r\\n\\r\\n                            {% block crehler_size_chart_detail_content_card_sales_channels %}\\r\\n                                <sw-entity-multi-select\\r\\n                                        {% if VUE3 %}\\r\\n                                            v-model:entityCollection=\\\"item.salesChannels\\\"\\r\\n                                        {% else %}\\r\\n                                            v-model=\\\"item.salesChannels\\\"\\r\\n                                        {% endif %}\\r\\n                                        required\\r\\n                                        entity-name=\\\"sales_channel\\\"\\r\\n                                        :label=\\\"$tc('crehler-product-type.detail.fieldSalesChannelsLabel')\\\"\\r\\n                                        :placeholder=\\\"$tc('crehler-product-type.detail.fieldSalesChannelsPlaceholder')\\\"\\r\\n                                />\\r\\n                            {% endblock %}\\r\\n                        </sw-card>\\r\\n                    {% endblock %}\\r\\n                {% endblock %}\\r\\n            </sw-card-view>\\r\\n        {% endblock %}\\r\\n    </sw-page>\\r\\n{% endblock %}\";","const { Component, Mixin, State, Data: { Criteria } } = Shopware;\r\n\r\nimport template from './crehler-advice-detail.html.twig';\r\n\r\nComponent.register('crehler-advice-detail', {\r\n    template,\r\n\r\n    inject: ['repositoryFactory', 'context'],\r\n\r\n    mixins: [\r\n        Mixin.getByName('notification'),\r\n        Mixin.getByName('placeholder')\r\n    ],\r\n\r\n    data() {\r\n        return {\r\n            item: {},\r\n            isLoading: false,\r\n            isSaveSuccessful: false\r\n        };\r\n    },\r\n\r\n    metaInfo() {\r\n        return {\r\n            title: this.$createTitle(this.identifier)\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        identifier() {\r\n            return this.placeholder(this.item, 'id');\r\n        },\r\n\r\n        productTypeCriteria() {\r\n            const criteria = new Criteria();\r\n            criteria.addAssociation('salesChannels');\r\n\r\n            return criteria;\r\n        },\r\n\r\n        entityName() {\r\n            return this.placeholder(\r\n                this.item,\r\n                'name',\r\n                this.$tc('crehler-advice.detail.placeholderNew'),\r\n            );\r\n        },\r\n    },\r\n\r\n    created() {\r\n        this.createdComponent();\r\n    },\r\n\r\n    methods: {\r\n        createdComponent() {\r\n            this.repository = this.repositoryFactory.create('crehler_advice');\r\n            this.getEntity();\r\n        },\r\n\r\n        getEntity() {\r\n            this.repository\r\n                .get(this.$route.params.id,\r\n                    Shopware.Context.api,\r\n                    this.productTypeCriteria)\r\n                .then((entity) => {\r\n                    this.item = entity;\r\n                });\r\n        },\r\n\r\n        saveFinish() {\r\n            this.isSaveSuccessful = false;\r\n        },\r\n\r\n        onSave() {\r\n            const titleSaveError = this.$tc('crehler-advice.detail.notificationSaveErrorTitle');\r\n            const messageSaveError = this.$tc(\r\n                'crehler-advice.detail.notificationSaveErrorMessage', 0, { name: this.item.name }\r\n            );\r\n            const titleSaveSuccess = this.$tc('crehler-advice.detail.notificationSaveSuccessTitle');\r\n            const messageSaveSuccess = this.$tc(\r\n                'crehler-advice.detail.notificationSaveSuccessMessage', 0, { name: this.item.name }\r\n            );\r\n\r\n            this.isSaveSuccessful = false;\r\n            this.isLoading = true;\r\n\r\n            return this.repository.save(this.item, Shopware.Context.api).then(() => {\r\n                this.createNotificationSuccess({\r\n                    title: titleSaveSuccess,\r\n                    message: messageSaveSuccess\r\n                });\r\n\r\n                this.isLoading = false;\r\n                this.isSaveSuccessful = true;\r\n            }).catch((exception) => {\r\n                this.createNotificationError({\r\n                    title: titleSaveError,\r\n                    message: messageSaveError\r\n                });\r\n                this.isLoading = false;\r\n                throw exception;\r\n            });\r\n        },\r\n\r\n        saveOnLanguageChange() {\r\n            return this.onSave();\r\n        },\r\n\r\n        abortOnLanguageChange() {\r\n            return this.repository.hasChanges(this.item);\r\n        },\r\n\r\n        onChangeLanguage(languageId) {\r\n            State.commit('context/setApiLanguageId', languageId);\r\n            this.createdComponent();\r\n        },\r\n    }\r\n});","import template from './sw-cms-block-advice.html.twig';\r\n\r\nShopware.Component.register('sw-cms-block-advice', {\r\n    template\r\n});","export default \"{% block sw_cms_block_advice %}\\r\\n    <div class=\\\"sw-cms-block-advice\\\">\\r\\n        <slot name=\\\"left\\\">{% block sw_cms_block_advice_left %}{% endblock %}</slot>\\r\\n    </div>\\r\\n{% endblock %}\";","import template from './sw-cms-preview-advice.html.twig';\r\n\r\nShopware.Component.register('sw-cms-preview-advice', {\r\n    template\r\n});","export default \"{% block sw_cms_block_advice_preview %}\\r\\n    <div class=\\\"sw-cms-preview-advice\\\">\\r\\n        <div>\\r\\n            <h2>Advice</h2>\\r\\n        </div>\\r\\n    </div>\\r\\n{% endblock %}\";","import './component';\r\nimport './preview';\r\n\r\nShopware.Service('cmsService').registerCmsBlock({\r\n    name: 'advice',\r\n    category: 'commerce',\r\n    label: 'Advice',\r\n    component: 'sw-cms-block-advice',\r\n    previewComponent: 'sw-cms-preview-advice',\r\n    defaultConfig: {\r\n        marginBottom: '20px',\r\n        marginTop: '20px',\r\n        marginLeft: '20px',\r\n        marginRight: '20px',\r\n        sizingMode: 'boxed'\r\n    },\r\n    slots: {\r\n        left: {\r\n            type: 'text',\r\n            default: {\r\n                config: {\r\n                    content: {\r\n                        source: 'static',\r\n                        value: `\r\n                        <div>Advice</div>\r\n                        `.trim(),\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    }\r\n});","import './page/crehler-advice-list';\r\nimport './page/crehler-advice-detail';\r\nimport './page/crehler-advice-create';\r\n\r\nimport './blocks/commerce/advice';\r\n\r\nimport plPL from './snippet/pl-PL.json';\r\nimport enGB from './snippet/en-GB.json';\r\n\r\nShopware.Module.register('crehler-advice', {\r\n    type: 'plugin',\r\n    name: 'CrehlerAdvice',\r\n    title: 'crehler-advice.general.mainMenuItemGeneral',\r\n    description: 'crehler-advice.general.descriptionTextModule',\r\n    version: '1.0.0',\r\n    targetVersion: '1.0.0',\r\n    color: '#9AA8B5',\r\n    icon: 'regular-table',\r\n    entity: 'crehler_advice',\r\n\r\n    snippets: {\r\n        'pl-PL': plPL,\r\n        'en-GB': enGB\r\n    },\r\n\r\n    routes: {\r\n        index: {\r\n            component: 'crehler-advice-list',\r\n            path: 'index',\r\n            meta: {\r\n                parentPath: 'sw.settings.index'\r\n            }\r\n        },\r\n        detail: {\r\n            component: 'crehler-advice-detail',\r\n            path: 'detail/:id',\r\n            meta: {\r\n                parentPath: 'crehler.advice.index'\r\n            }\r\n        },\r\n        create: {\r\n            component: 'crehler-advice-create',\r\n            path: 'create',\r\n            meta: {\r\n                parentPath: 'crehler.advice.index'\r\n            }\r\n        }\r\n    },\r\n\r\n    settingsItem: [\r\n        {\r\n            name:   'crehler-advice-index',\r\n            to:     'crehler.advice.index',\r\n            label:  'crehler-advice.general.mainMenuItemGeneral',\r\n            group:  'plugins',\r\n            icon:   'regular-table'\r\n        }\r\n    ]\r\n});","const { Component } = Shopware;\r\nconst utils = Shopware.Utils;\r\n\r\n\r\nComponent.extend('crehler-advice-create', 'crehler-advice-detail', {\r\n\r\n    beforeRouteEnter(to, from, next) {\r\n        if (to.name.includes('crehler.advice.create') && !to.params.id) {\r\n            to.params.id = utils.createId();\r\n        }\r\n\r\n        next();\r\n    },\r\n\r\n    methods: {\r\n        createdComponent() {\r\n            if (!Shopware.State.getters['context/isSystemDefaultLanguage']) {\r\n                Shopware.State.commit('context/resetLanguageToDefault');\r\n            }\r\n\r\n            this.$super('createdComponent');\r\n        },\r\n\r\n        getEntity() {\r\n            this.item = this.repository.create(Shopware.Context.api);\r\n        },\r\n\r\n        saveFinish() {\r\n            this.isSaveSuccessful = false;\r\n            this.$router.push({ name: 'crehler.advice.detail', params: { id: this.item.id } });\r\n        },\r\n\r\n        onSave() {\r\n            this.$super('onSave');\r\n        }\r\n    }\r\n});"],"sourceRoot":""}